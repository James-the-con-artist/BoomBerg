{"ast":null,"code":"var _class;\nexport const API_KEY = \"YPVIUFGK5JYWHLVM\";\nexport default class CSAPI {\n  constructor() {}\n  static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n  async fetchItemStats(hashname) {\n    const apiUrl = `https://www.steamwebapi.com/steam/api/item?key=${API_KEY}&market_hash_name=${hashname}`;\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const dataProfile = {};\n      console.log(\"run.\");\n      console.log(data);\n      return dataProfile;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return null;\n    }\n  }\n\n  //https://www.steamwebapi.com/steam/api/item?key=${API_KEY}&market_hash_name=\n  /*\n  market hash name --> itemName | skinName (quality)\n  */\n\n  async fetchRandomProfiles(limit) {\n    const apiUrl = `https://www.steamwebapi.com/explore/api/random?key=${API_KEY}&limit=${limit}`;\n    try {\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const dataProfile = {\n        iD: data[0].steamID,\n        username: data[0].personaname,\n        fullAvatarImg: data[0].avatarfull,\n        countryCode: data[0].loccountrycode,\n        inventoryValue: data[0].inventoryworth.worth,\n        inventorySize: data[0].inventoryworth.size\n      };\n      console.log(\"run.\");\n      console.log(data);\n      return dataProfile;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return null;\n    }\n  }\n}\n_class = CSAPI;\nCSAPI._instance = void 0;\nexport const CSAPIInstance = CSAPI.Instance;","map":{"version":3,"names":["API_KEY","CSAPI","constructor","Instance","_instance","fetchItemStats","hashname","apiUrl","response","fetch","ok","Error","status","data","json","dataProfile","console","log","error","fetchRandomProfiles","limit","iD","steamID","username","personaname","fullAvatarImg","avatarfull","countryCode","loccountrycode","inventoryValue","inventoryworth","worth","inventorySize","size","_class","CSAPIInstance"],"sources":["/Users/james/dev/miniHack-23/boomberg/src/classes/CounterStrikeApi.ts"],"sourcesContent":["import { Item, SteamProfile } from \"./CSAPIModels\";\n\nexport const API_KEY = \"YPVIUFGK5JYWHLVM\";\n\nexport default class CSAPI {\n   \n    private static _instance: CSAPI;\n\n    private constructor() {\n\n    }\n\n    public static get Instance() {\n        return this._instance || (this._instance = new this());\n    } \n\n    public async fetchItemStats(hashname: string): Promise <Item | null> {\n        const apiUrl = `https://www.steamwebapi.com/steam/api/item?key=${API_KEY}&market_hash_name=${hashname}`;\n        try {\n            const response = await fetch(apiUrl);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            const dataProfile:SteamProfile = {\n                \n            }\n\n            console.log(\"run.\");\n\n            console.log(data);\n            return dataProfile;\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n            return null;\n        }\n    }\n\n    //https://www.steamwebapi.com/steam/api/item?key=${API_KEY}&market_hash_name=\n    /*\n    market hash name --> itemName | skinName (quality)\n    */\n\n    public async fetchRandomProfiles(limit: number): Promise<SteamProfile | null> {\n        const apiUrl = `https://www.steamwebapi.com/explore/api/random?key=${API_KEY}&limit=${limit}`;\n        try {\n            const response = await fetch(apiUrl);\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            const dataProfile:SteamProfile = {\n                iD: data[0].steamID,\n                username: data[0].personaname,\n                fullAvatarImg: data[0].avatarfull,\n                countryCode: data[0].loccountrycode,\n                inventoryValue: data[0].inventoryworth.worth,\n                inventorySize: data[0].inventoryworth.size\n            }\n\n            console.log(\"run.\");\n\n            console.log(data);\n            return dataProfile;\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n            return null;\n        }\n    }\n}\n\nexport const CSAPIInstance = CSAPI.Instance;"],"mappings":";AAEA,OAAO,MAAMA,OAAO,GAAG,kBAAkB;AAEzC,eAAe,MAAMC,KAAK,CAAC;EAIfC,WAAWA,CAAA,EAAG,CAEtB;EAEA,WAAkBC,QAAQA,CAAA,EAAG;IACzB,OAAO,IAAI,CAACC,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;EAC1D;EAEA,MAAaC,cAAcA,CAACC,QAAgB,EAAyB;IACjE,MAAMC,MAAM,GAAI,kDAAiDP,OAAQ,qBAAoBM,QAAS,EAAC;IACvG,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;MACpC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAwB,GAAG,CAEjC,CAAC;MAEDC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MAEnBD,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB,OAAOE,WAAW;IAEtB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,IAAI;IACf;EACJ;;EAEA;EACA;AACJ;AACA;;EAEI,MAAaC,mBAAmBA,CAACC,KAAa,EAAgC;IAC1E,MAAMb,MAAM,GAAI,sDAAqDP,OAAQ,UAASoB,KAAM,EAAC;IAC7F,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;MACpC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAwB,GAAG;QAC7BM,EAAE,EAAER,IAAI,CAAC,CAAC,CAAC,CAACS,OAAO;QACnBC,QAAQ,EAAEV,IAAI,CAAC,CAAC,CAAC,CAACW,WAAW;QAC7BC,aAAa,EAAEZ,IAAI,CAAC,CAAC,CAAC,CAACa,UAAU;QACjCC,WAAW,EAAEd,IAAI,CAAC,CAAC,CAAC,CAACe,cAAc;QACnCC,cAAc,EAAEhB,IAAI,CAAC,CAAC,CAAC,CAACiB,cAAc,CAACC,KAAK;QAC5CC,aAAa,EAAEnB,IAAI,CAAC,CAAC,CAAC,CAACiB,cAAc,CAACG;MAC1C,CAAC;MAEDjB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MAEnBD,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB,OAAOE,WAAW;IAEtB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,IAAI;IACf;EACJ;AACJ;AAACgB,MAAA,GAvEoBjC,KAAK;AAALA,KAAK,CAEPG,SAAS;AAuE5B,OAAO,MAAM+B,aAAa,GAAGlC,KAAK,CAACE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}